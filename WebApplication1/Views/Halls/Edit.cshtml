@model WebApplication1.Models.Hall

<!-- ============================================================== -->
<!-- Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<div class="row page-titles">
    <div class="col-md-5 align-self-center">
        <h3 class="text-themecolor">Halls</h3>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Edit</li>
        </ol>
    </div>

</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Start Page Content -->
<!-- ============================================================== -->
<!-- Row -->
<div class="row">
    @using (Html.BeginForm("Edit", "Halls", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Hall</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Hall_ID)

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hall_Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hall_Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hall_Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hall_Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Picture, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img height="100" width="100" id="preview" src="@Url.Content(Model.Hall_Picture)" />
                    <input type="file" name="pic" accept="img/*" oninput="preview.src = window.URL.createObjectURL(this.files[0])" style="color: transparent; padding-left: 65px;" /><br />
                    @Html.EditorFor(model => model.Hall_Picture, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Hall_Picture, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Picture1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img height="100" width="100" id="preview" src="@Url.Content(Model.Hall_Picture1)" />
                    <input type="file" name="pic1" accept="img/*" oninput="preview.src = window.URL.createObjectURL(this.files[0])" style="color: transparent; padding-left: 65px;" /><br />
                    @Html.EditorFor(model => model.Hall_Picture1, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Hall_Picture1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Picture2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img height="100" width="100" id="preview" src="@Url.Content(Model.Hall_Picture2)" />
                    <input type="file" name="pic2" accept="img/*" oninput="preview.src = window.URL.createObjectURL(this.files[0])" style="color: transparent; padding-left: 65px;" /><br />
                    @Html.EditorFor(model => model.Hall_Picture2, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Hall_Picture2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Picture3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <img height="100" width="100" id="preview" src="@Url.Content(Model.Hall_Picture3)" />
                    <input type="file" name="pic3" accept="img/*" oninput="preview.src = window.URL.createObjectURL(this.files[0])" style="color: transparent; padding-left: 65px;" /><br />
                    @Html.EditorFor(model => model.Hall_Picture3, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
                    @Html.ValidationMessageFor(model => model.Hall_Picture3, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hall_Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hall_Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event_Slot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Event_Slot, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Event_Slot, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Event_Time_Slot, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Event_Time_Slot, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Event_Time_Slot, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Hall_Location, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Hall_Location, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hall_Location, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Staff, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Staff, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Staff, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ameities, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ameities, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Ameities, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Cancellation_Policy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Cancellation_Policy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Cancellation_Policy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Venue_Type, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Venue_Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Venue_Type, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Venue_FID, "Venue_FID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Venue_FID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Venue_FID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-8">
                    <button type="submit" class="btn btn-primary btn-lg fa fa-save"> Save </button> 
                    <a class="btn btn-warning btn-lg fa fa-arrow-circle-o-left" href="@Url.Action("Index", "Halls")"> Back to List </a>
                </div>
            </div>
            

            <!-- Column -->

        </div>
    }
</div>
<!-- Row -->
